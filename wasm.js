//deno-fmt-ignore-file
import*as A from"https://deno.land/x/lz4@v0.1.2/mod.ts";export const source=A.decompress(Uint8Array.from(atob("8QsAYXNtAQAAAAEXBGACf38Bf2AEf39/fwBgAQQAgAF/AwwLAAECIwDxUwMAAwIEBQFwAQoKBQMBABEGCQF/AUGAgMAACwcQAgZtZW1vcnkCAANhZGQABQkPAQBBAQsJCgEICQoDBgcKCpMHC6MDAQZ/IABBAnQhBSABKAIAIQIDQAJAIAJFDQAgAiEDDQCxAygCCCICQQFxRQQNAPAZAEF8cSIGIANBCGoiBGsgBUkNAQJAIARBzIjAACAAQdyIwAAoAgARAFcAkGpBCGogBiAFazQAYQJLBEAgBGYA8A0gBEEDcQ0DIAEgAkF8cTYCACADIQIMAQsgAkEADgCQAkF4aiICQgA3DAAEdQAAGQAACwAgIgFOAIAARSABQQJxcpYAUAAgACgCUwCzIAJyNgIECyACIAIRABADEQAgIAM5AHIIQX5xNgIIDQAwACIAHwBAAnIiAVgAQABBAnH1AFEDIAFBfWoAAUMAIABBUQATAFEAMABBAQ4A4iACQQhqIQcMAwsgAyACVQAxAn9BnQAQBJsAAD8BIRpBQwDwAS0AAEEBcRsLIQIgAxACIAMQAEACcQRAHAAAUQADXwAxASACWQBUIQMMAQsPAAELAOEHC38BAX8jAEEQayIDJKEAAL0AAAUA8AQ2AgwgAkECaiICIAJsIgJBgBAgBQDwAEsbIgQgA0EMahAEIQIgAZYAEQxdADEEfyBTARAEfQAhIASfAQGAAKBBAAVBAQshASAAeABBBCAAIBQBsANBEGokAAtzAQJ/YAEDeAEXAngBAcUAAWcBEAAIADF8cXJ+AQKPARAi2wFhIgEEfyABtAADJwAAygEAdQAADACCBAUgAgtBA3F1AAEdAAANAGAAC3EAAn/cAMB0IgEgA0EDdEGAgAHoAPIPASACSxtBh4AEaiIBQRB2QAAiAkF/RgRAQQAhA0EBQQKAEHQiA0IANwPBABMA8AEQIBgDJXxx8AAAkAEyACADeAAAbAFGC2UBAmYBEAJTAlABEAAiAhMCNEEIat0CMwRB2N8CMAEAQcgCAFcCACQAMCgCDJ8AAZYBIgggwAECRAAzIQILSgFBIAILBxUAkGoLBQBBgAQLBJIDMAQAIAUA8whBAAsDAAELC04BAEGciMAAC0UBAAAABAQAEQLvAwIMACIFAAEAACAA0AYAAAAHAAAACAAAAAkVAA0YAPBtewlwcm9kdWNlcnMCCGxhbmd1YWdlAQRSdXN0AAxwcm9jZXNzZWQtYnkDBXJ1c3RjHTEuNDQuMSAoYzcwODdmZTAwIDIwMjAtMDYtMTcpBndhbHJ1cwYwLjE3LjAMd2FzbS1iaW5kZ2VuEjAuMi42NCAoMzFjMmQ2ZmJlKQ=="),A=>A.charCodeAt(0)));let t;export function add(A,Q){return t.add(A,Q)}async function Q(A,t){if("function"==typeof Response&&A instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(A,t)}catch(t){if("application/wasm"==A.headers.get("Content-Type"))throw t;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t)}const Q=await A.arrayBuffer();return await WebAssembly.instantiate(Q,t)}{const Q=await WebAssembly.instantiate(A,t);return Q instanceof WebAssembly.Instance?{instance:Q,module:A}:Q}}async function e(A){void 0===A&&(A=import.meta.url.replace(/\.js$/,"_bg.wasm"));("string"==typeof A||"function"==typeof Request&&A instanceof Request||"function"==typeof URL&&A instanceof URL)&&(A=fetch(A));const{instance:B,module:n}=await Q(await A,{});return t=B.exports,e.__wbindgen_wasm_module=n,t}export default e;